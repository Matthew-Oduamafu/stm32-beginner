
0001HelloWorld.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b98  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000cc8  08000cc8  00001cc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000cd4  08000cd4  0000205c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000cd4  08000cd4  0000205c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000cd4  08000cd4  0000205c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000cd4  08000cd4  00001cd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000cd8  08000cd8  00001cd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08000cdc  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08000d38  0000205c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08000d38  000021c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000205c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000008fe  00000000  00000000  00002085  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002d8  00000000  00000000  00002983  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00002c60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000be  00000000  00000000  00002d78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002baf  00000000  00000000  00002e36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000012dc  00000000  00000000  000059e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009898  00000000  00000000  00006cc1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00010559  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000009d0  00000000  00000000  0001059c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007b  00000000  00000000  00010f6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	2000005c 	.word	0x2000005c
 800014c:	00000000 	.word	0x00000000
 8000150:	08000cb0 	.word	0x08000cb0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000060 	.word	0x20000060
 800016c:	08000cb0 	.word	0x08000cb0

08000170 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
	printf("Hello world\n");
 8000174:	4802      	ldr	r0, [pc, #8]	@ (8000180 <main+0x10>)
 8000176:	f000 fa0d 	bl	8000594 <puts>
    /* Loop forever */
	for(;;);
 800017a:	bf00      	nop
 800017c:	e7fd      	b.n	800017a <main+0xa>
 800017e:	bf00      	nop
 8000180:	08000cc8 	.word	0x08000cc8

08000184 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000184:	b480      	push	{r7}
 8000186:	b083      	sub	sp, #12
 8000188:	af00      	add	r7, sp, #0
 800018a:	4603      	mov	r3, r0
 800018c:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 800018e:	4b0e      	ldr	r3, [pc, #56]	@ (80001c8 <ITM_SendChar+0x44>)
 8000190:	681b      	ldr	r3, [r3, #0]
 8000192:	4a0d      	ldr	r2, [pc, #52]	@ (80001c8 <ITM_SendChar+0x44>)
 8000194:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000198:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800019a:	4b0c      	ldr	r3, [pc, #48]	@ (80001cc <ITM_SendChar+0x48>)
 800019c:	681b      	ldr	r3, [r3, #0]
 800019e:	4a0b      	ldr	r2, [pc, #44]	@ (80001cc <ITM_SendChar+0x48>)
 80001a0:	f043 0301 	orr.w	r3, r3, #1
 80001a4:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80001a6:	bf00      	nop
 80001a8:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80001ac:	681b      	ldr	r3, [r3, #0]
 80001ae:	f003 0301 	and.w	r3, r3, #1
 80001b2:	2b00      	cmp	r3, #0
 80001b4:	d0f8      	beq.n	80001a8 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80001b6:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80001ba:	79fb      	ldrb	r3, [r7, #7]
 80001bc:	6013      	str	r3, [r2, #0]
}
 80001be:	bf00      	nop
 80001c0:	370c      	adds	r7, #12
 80001c2:	46bd      	mov	sp, r7
 80001c4:	bc80      	pop	{r7}
 80001c6:	4770      	bx	lr
 80001c8:	e000edfc 	.word	0xe000edfc
 80001cc:	e0000e00 	.word	0xe0000e00

080001d0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80001d0:	b580      	push	{r7, lr}
 80001d2:	b086      	sub	sp, #24
 80001d4:	af00      	add	r7, sp, #0
 80001d6:	60f8      	str	r0, [r7, #12]
 80001d8:	60b9      	str	r1, [r7, #8]
 80001da:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001dc:	2300      	movs	r3, #0
 80001de:	617b      	str	r3, [r7, #20]
 80001e0:	e00a      	b.n	80001f8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80001e2:	f3af 8000 	nop.w
 80001e6:	4601      	mov	r1, r0
 80001e8:	68bb      	ldr	r3, [r7, #8]
 80001ea:	1c5a      	adds	r2, r3, #1
 80001ec:	60ba      	str	r2, [r7, #8]
 80001ee:	b2ca      	uxtb	r2, r1
 80001f0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001f2:	697b      	ldr	r3, [r7, #20]
 80001f4:	3301      	adds	r3, #1
 80001f6:	617b      	str	r3, [r7, #20]
 80001f8:	697a      	ldr	r2, [r7, #20]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	429a      	cmp	r2, r3
 80001fe:	dbf0      	blt.n	80001e2 <_read+0x12>
  }

  return len;
 8000200:	687b      	ldr	r3, [r7, #4]
}
 8000202:	4618      	mov	r0, r3
 8000204:	3718      	adds	r7, #24
 8000206:	46bd      	mov	sp, r7
 8000208:	bd80      	pop	{r7, pc}

0800020a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800020a:	b580      	push	{r7, lr}
 800020c:	b086      	sub	sp, #24
 800020e:	af00      	add	r7, sp, #0
 8000210:	60f8      	str	r0, [r7, #12]
 8000212:	60b9      	str	r1, [r7, #8]
 8000214:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000216:	2300      	movs	r3, #0
 8000218:	617b      	str	r3, [r7, #20]
 800021a:	e009      	b.n	8000230 <_write+0x26>
  {
//    __io_putchar(*ptr++);
    ITM_SendChar(*ptr++);
 800021c:	68bb      	ldr	r3, [r7, #8]
 800021e:	1c5a      	adds	r2, r3, #1
 8000220:	60ba      	str	r2, [r7, #8]
 8000222:	781b      	ldrb	r3, [r3, #0]
 8000224:	4618      	mov	r0, r3
 8000226:	f7ff ffad 	bl	8000184 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800022a:	697b      	ldr	r3, [r7, #20]
 800022c:	3301      	adds	r3, #1
 800022e:	617b      	str	r3, [r7, #20]
 8000230:	697a      	ldr	r2, [r7, #20]
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	429a      	cmp	r2, r3
 8000236:	dbf1      	blt.n	800021c <_write+0x12>
  }
  return len;
 8000238:	687b      	ldr	r3, [r7, #4]
}
 800023a:	4618      	mov	r0, r3
 800023c:	3718      	adds	r7, #24
 800023e:	46bd      	mov	sp, r7
 8000240:	bd80      	pop	{r7, pc}

08000242 <_close>:

int _close(int file)
{
 8000242:	b480      	push	{r7}
 8000244:	b083      	sub	sp, #12
 8000246:	af00      	add	r7, sp, #0
 8000248:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800024a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 800024e:	4618      	mov	r0, r3
 8000250:	370c      	adds	r7, #12
 8000252:	46bd      	mov	sp, r7
 8000254:	bc80      	pop	{r7}
 8000256:	4770      	bx	lr

08000258 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000258:	b480      	push	{r7}
 800025a:	b083      	sub	sp, #12
 800025c:	af00      	add	r7, sp, #0
 800025e:	6078      	str	r0, [r7, #4]
 8000260:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000262:	683b      	ldr	r3, [r7, #0]
 8000264:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000268:	605a      	str	r2, [r3, #4]
  return 0;
 800026a:	2300      	movs	r3, #0
}
 800026c:	4618      	mov	r0, r3
 800026e:	370c      	adds	r7, #12
 8000270:	46bd      	mov	sp, r7
 8000272:	bc80      	pop	{r7}
 8000274:	4770      	bx	lr

08000276 <_isatty>:

int _isatty(int file)
{
 8000276:	b480      	push	{r7}
 8000278:	b083      	sub	sp, #12
 800027a:	af00      	add	r7, sp, #0
 800027c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800027e:	2301      	movs	r3, #1
}
 8000280:	4618      	mov	r0, r3
 8000282:	370c      	adds	r7, #12
 8000284:	46bd      	mov	sp, r7
 8000286:	bc80      	pop	{r7}
 8000288:	4770      	bx	lr

0800028a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800028a:	b480      	push	{r7}
 800028c:	b085      	sub	sp, #20
 800028e:	af00      	add	r7, sp, #0
 8000290:	60f8      	str	r0, [r7, #12]
 8000292:	60b9      	str	r1, [r7, #8]
 8000294:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000296:	2300      	movs	r3, #0
}
 8000298:	4618      	mov	r0, r3
 800029a:	3714      	adds	r7, #20
 800029c:	46bd      	mov	sp, r7
 800029e:	bc80      	pop	{r7}
 80002a0:	4770      	bx	lr
	...

080002a4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002a4:	b580      	push	{r7, lr}
 80002a6:	b086      	sub	sp, #24
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002ac:	4a14      	ldr	r2, [pc, #80]	@ (8000300 <_sbrk+0x5c>)
 80002ae:	4b15      	ldr	r3, [pc, #84]	@ (8000304 <_sbrk+0x60>)
 80002b0:	1ad3      	subs	r3, r2, r3
 80002b2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002b4:	697b      	ldr	r3, [r7, #20]
 80002b6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80002b8:	4b13      	ldr	r3, [pc, #76]	@ (8000308 <_sbrk+0x64>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d102      	bne.n	80002c6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80002c0:	4b11      	ldr	r3, [pc, #68]	@ (8000308 <_sbrk+0x64>)
 80002c2:	4a12      	ldr	r2, [pc, #72]	@ (800030c <_sbrk+0x68>)
 80002c4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80002c6:	4b10      	ldr	r3, [pc, #64]	@ (8000308 <_sbrk+0x64>)
 80002c8:	681a      	ldr	r2, [r3, #0]
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	4413      	add	r3, r2
 80002ce:	693a      	ldr	r2, [r7, #16]
 80002d0:	429a      	cmp	r2, r3
 80002d2:	d207      	bcs.n	80002e4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80002d4:	f000 f96e 	bl	80005b4 <__errno>
 80002d8:	4603      	mov	r3, r0
 80002da:	220c      	movs	r2, #12
 80002dc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80002de:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80002e2:	e009      	b.n	80002f8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80002e4:	4b08      	ldr	r3, [pc, #32]	@ (8000308 <_sbrk+0x64>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80002ea:	4b07      	ldr	r3, [pc, #28]	@ (8000308 <_sbrk+0x64>)
 80002ec:	681a      	ldr	r2, [r3, #0]
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	4413      	add	r3, r2
 80002f2:	4a05      	ldr	r2, [pc, #20]	@ (8000308 <_sbrk+0x64>)
 80002f4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80002f6:	68fb      	ldr	r3, [r7, #12]
}
 80002f8:	4618      	mov	r0, r3
 80002fa:	3718      	adds	r7, #24
 80002fc:	46bd      	mov	sp, r7
 80002fe:	bd80      	pop	{r7, pc}
 8000300:	20005000 	.word	0x20005000
 8000304:	00000400 	.word	0x00000400
 8000308:	20000078 	.word	0x20000078
 800030c:	200001c8 	.word	0x200001c8

08000310 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000310:	480d      	ldr	r0, [pc, #52]	@ (8000348 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000312:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000314:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000318:	480c      	ldr	r0, [pc, #48]	@ (800034c <LoopForever+0x6>)
  ldr r1, =_edata
 800031a:	490d      	ldr	r1, [pc, #52]	@ (8000350 <LoopForever+0xa>)
  ldr r2, =_sidata
 800031c:	4a0d      	ldr	r2, [pc, #52]	@ (8000354 <LoopForever+0xe>)
  movs r3, #0
 800031e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000320:	e002      	b.n	8000328 <LoopCopyDataInit>

08000322 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000322:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000324:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000326:	3304      	adds	r3, #4

08000328 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000328:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800032a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800032c:	d3f9      	bcc.n	8000322 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800032e:	4a0a      	ldr	r2, [pc, #40]	@ (8000358 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000330:	4c0a      	ldr	r4, [pc, #40]	@ (800035c <LoopForever+0x16>)
  movs r3, #0
 8000332:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000334:	e001      	b.n	800033a <LoopFillZerobss>

08000336 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000336:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000338:	3204      	adds	r2, #4

0800033a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800033a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800033c:	d3fb      	bcc.n	8000336 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800033e:	f000 f93f 	bl	80005c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000342:	f7ff ff15 	bl	8000170 <main>

08000346 <LoopForever>:

LoopForever:
  b LoopForever
 8000346:	e7fe      	b.n	8000346 <LoopForever>
  ldr   r0, =_estack
 8000348:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800034c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000350:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000354:	08000cdc 	.word	0x08000cdc
  ldr r2, =_sbss
 8000358:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 800035c:	200001c8 	.word	0x200001c8

08000360 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000360:	e7fe      	b.n	8000360 <ADC1_2_IRQHandler>
	...

08000364 <std>:
 8000364:	2300      	movs	r3, #0
 8000366:	b510      	push	{r4, lr}
 8000368:	4604      	mov	r4, r0
 800036a:	e9c0 3300 	strd	r3, r3, [r0]
 800036e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000372:	6083      	str	r3, [r0, #8]
 8000374:	8181      	strh	r1, [r0, #12]
 8000376:	6643      	str	r3, [r0, #100]	@ 0x64
 8000378:	81c2      	strh	r2, [r0, #14]
 800037a:	6183      	str	r3, [r0, #24]
 800037c:	4619      	mov	r1, r3
 800037e:	2208      	movs	r2, #8
 8000380:	305c      	adds	r0, #92	@ 0x5c
 8000382:	f000 f90f 	bl	80005a4 <memset>
 8000386:	4b0d      	ldr	r3, [pc, #52]	@ (80003bc <std+0x58>)
 8000388:	6224      	str	r4, [r4, #32]
 800038a:	6263      	str	r3, [r4, #36]	@ 0x24
 800038c:	4b0c      	ldr	r3, [pc, #48]	@ (80003c0 <std+0x5c>)
 800038e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000390:	4b0c      	ldr	r3, [pc, #48]	@ (80003c4 <std+0x60>)
 8000392:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000394:	4b0c      	ldr	r3, [pc, #48]	@ (80003c8 <std+0x64>)
 8000396:	6323      	str	r3, [r4, #48]	@ 0x30
 8000398:	4b0c      	ldr	r3, [pc, #48]	@ (80003cc <std+0x68>)
 800039a:	429c      	cmp	r4, r3
 800039c:	d006      	beq.n	80003ac <std+0x48>
 800039e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80003a2:	4294      	cmp	r4, r2
 80003a4:	d002      	beq.n	80003ac <std+0x48>
 80003a6:	33d0      	adds	r3, #208	@ 0xd0
 80003a8:	429c      	cmp	r4, r3
 80003aa:	d105      	bne.n	80003b8 <std+0x54>
 80003ac:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80003b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80003b4:	f000 b928 	b.w	8000608 <__retarget_lock_init_recursive>
 80003b8:	bd10      	pop	{r4, pc}
 80003ba:	bf00      	nop
 80003bc:	080008bd 	.word	0x080008bd
 80003c0:	080008df 	.word	0x080008df
 80003c4:	08000917 	.word	0x08000917
 80003c8:	0800093b 	.word	0x0800093b
 80003cc:	2000007c 	.word	0x2000007c

080003d0 <stdio_exit_handler>:
 80003d0:	4a02      	ldr	r2, [pc, #8]	@ (80003dc <stdio_exit_handler+0xc>)
 80003d2:	4903      	ldr	r1, [pc, #12]	@ (80003e0 <stdio_exit_handler+0x10>)
 80003d4:	4803      	ldr	r0, [pc, #12]	@ (80003e4 <stdio_exit_handler+0x14>)
 80003d6:	f000 b869 	b.w	80004ac <_fwalk_sglue>
 80003da:	bf00      	nop
 80003dc:	20000000 	.word	0x20000000
 80003e0:	08000855 	.word	0x08000855
 80003e4:	20000010 	.word	0x20000010

080003e8 <cleanup_stdio>:
 80003e8:	6841      	ldr	r1, [r0, #4]
 80003ea:	4b0c      	ldr	r3, [pc, #48]	@ (800041c <cleanup_stdio+0x34>)
 80003ec:	b510      	push	{r4, lr}
 80003ee:	4299      	cmp	r1, r3
 80003f0:	4604      	mov	r4, r0
 80003f2:	d001      	beq.n	80003f8 <cleanup_stdio+0x10>
 80003f4:	f000 fa2e 	bl	8000854 <_fflush_r>
 80003f8:	68a1      	ldr	r1, [r4, #8]
 80003fa:	4b09      	ldr	r3, [pc, #36]	@ (8000420 <cleanup_stdio+0x38>)
 80003fc:	4299      	cmp	r1, r3
 80003fe:	d002      	beq.n	8000406 <cleanup_stdio+0x1e>
 8000400:	4620      	mov	r0, r4
 8000402:	f000 fa27 	bl	8000854 <_fflush_r>
 8000406:	68e1      	ldr	r1, [r4, #12]
 8000408:	4b06      	ldr	r3, [pc, #24]	@ (8000424 <cleanup_stdio+0x3c>)
 800040a:	4299      	cmp	r1, r3
 800040c:	d004      	beq.n	8000418 <cleanup_stdio+0x30>
 800040e:	4620      	mov	r0, r4
 8000410:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000414:	f000 ba1e 	b.w	8000854 <_fflush_r>
 8000418:	bd10      	pop	{r4, pc}
 800041a:	bf00      	nop
 800041c:	2000007c 	.word	0x2000007c
 8000420:	200000e4 	.word	0x200000e4
 8000424:	2000014c 	.word	0x2000014c

08000428 <global_stdio_init.part.0>:
 8000428:	b510      	push	{r4, lr}
 800042a:	4b0b      	ldr	r3, [pc, #44]	@ (8000458 <global_stdio_init.part.0+0x30>)
 800042c:	4c0b      	ldr	r4, [pc, #44]	@ (800045c <global_stdio_init.part.0+0x34>)
 800042e:	4a0c      	ldr	r2, [pc, #48]	@ (8000460 <global_stdio_init.part.0+0x38>)
 8000430:	4620      	mov	r0, r4
 8000432:	601a      	str	r2, [r3, #0]
 8000434:	2104      	movs	r1, #4
 8000436:	2200      	movs	r2, #0
 8000438:	f7ff ff94 	bl	8000364 <std>
 800043c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000440:	2201      	movs	r2, #1
 8000442:	2109      	movs	r1, #9
 8000444:	f7ff ff8e 	bl	8000364 <std>
 8000448:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800044c:	2202      	movs	r2, #2
 800044e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000452:	2112      	movs	r1, #18
 8000454:	f7ff bf86 	b.w	8000364 <std>
 8000458:	200001b4 	.word	0x200001b4
 800045c:	2000007c 	.word	0x2000007c
 8000460:	080003d1 	.word	0x080003d1

08000464 <__sfp_lock_acquire>:
 8000464:	4801      	ldr	r0, [pc, #4]	@ (800046c <__sfp_lock_acquire+0x8>)
 8000466:	f000 b8d0 	b.w	800060a <__retarget_lock_acquire_recursive>
 800046a:	bf00      	nop
 800046c:	200001b9 	.word	0x200001b9

08000470 <__sfp_lock_release>:
 8000470:	4801      	ldr	r0, [pc, #4]	@ (8000478 <__sfp_lock_release+0x8>)
 8000472:	f000 b8cb 	b.w	800060c <__retarget_lock_release_recursive>
 8000476:	bf00      	nop
 8000478:	200001b9 	.word	0x200001b9

0800047c <__sinit>:
 800047c:	b510      	push	{r4, lr}
 800047e:	4604      	mov	r4, r0
 8000480:	f7ff fff0 	bl	8000464 <__sfp_lock_acquire>
 8000484:	6a23      	ldr	r3, [r4, #32]
 8000486:	b11b      	cbz	r3, 8000490 <__sinit+0x14>
 8000488:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800048c:	f7ff bff0 	b.w	8000470 <__sfp_lock_release>
 8000490:	4b04      	ldr	r3, [pc, #16]	@ (80004a4 <__sinit+0x28>)
 8000492:	6223      	str	r3, [r4, #32]
 8000494:	4b04      	ldr	r3, [pc, #16]	@ (80004a8 <__sinit+0x2c>)
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	2b00      	cmp	r3, #0
 800049a:	d1f5      	bne.n	8000488 <__sinit+0xc>
 800049c:	f7ff ffc4 	bl	8000428 <global_stdio_init.part.0>
 80004a0:	e7f2      	b.n	8000488 <__sinit+0xc>
 80004a2:	bf00      	nop
 80004a4:	080003e9 	.word	0x080003e9
 80004a8:	200001b4 	.word	0x200001b4

080004ac <_fwalk_sglue>:
 80004ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80004b0:	4607      	mov	r7, r0
 80004b2:	4688      	mov	r8, r1
 80004b4:	4614      	mov	r4, r2
 80004b6:	2600      	movs	r6, #0
 80004b8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80004bc:	f1b9 0901 	subs.w	r9, r9, #1
 80004c0:	d505      	bpl.n	80004ce <_fwalk_sglue+0x22>
 80004c2:	6824      	ldr	r4, [r4, #0]
 80004c4:	2c00      	cmp	r4, #0
 80004c6:	d1f7      	bne.n	80004b8 <_fwalk_sglue+0xc>
 80004c8:	4630      	mov	r0, r6
 80004ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80004ce:	89ab      	ldrh	r3, [r5, #12]
 80004d0:	2b01      	cmp	r3, #1
 80004d2:	d907      	bls.n	80004e4 <_fwalk_sglue+0x38>
 80004d4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80004d8:	3301      	adds	r3, #1
 80004da:	d003      	beq.n	80004e4 <_fwalk_sglue+0x38>
 80004dc:	4629      	mov	r1, r5
 80004de:	4638      	mov	r0, r7
 80004e0:	47c0      	blx	r8
 80004e2:	4306      	orrs	r6, r0
 80004e4:	3568      	adds	r5, #104	@ 0x68
 80004e6:	e7e9      	b.n	80004bc <_fwalk_sglue+0x10>

080004e8 <_puts_r>:
 80004e8:	6a03      	ldr	r3, [r0, #32]
 80004ea:	b570      	push	{r4, r5, r6, lr}
 80004ec:	4605      	mov	r5, r0
 80004ee:	460e      	mov	r6, r1
 80004f0:	6884      	ldr	r4, [r0, #8]
 80004f2:	b90b      	cbnz	r3, 80004f8 <_puts_r+0x10>
 80004f4:	f7ff ffc2 	bl	800047c <__sinit>
 80004f8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80004fa:	07db      	lsls	r3, r3, #31
 80004fc:	d405      	bmi.n	800050a <_puts_r+0x22>
 80004fe:	89a3      	ldrh	r3, [r4, #12]
 8000500:	0598      	lsls	r0, r3, #22
 8000502:	d402      	bmi.n	800050a <_puts_r+0x22>
 8000504:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000506:	f000 f880 	bl	800060a <__retarget_lock_acquire_recursive>
 800050a:	89a3      	ldrh	r3, [r4, #12]
 800050c:	0719      	lsls	r1, r3, #28
 800050e:	d502      	bpl.n	8000516 <_puts_r+0x2e>
 8000510:	6923      	ldr	r3, [r4, #16]
 8000512:	2b00      	cmp	r3, #0
 8000514:	d135      	bne.n	8000582 <_puts_r+0x9a>
 8000516:	4621      	mov	r1, r4
 8000518:	4628      	mov	r0, r5
 800051a:	f000 fa51 	bl	80009c0 <__swsetup_r>
 800051e:	b380      	cbz	r0, 8000582 <_puts_r+0x9a>
 8000520:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 8000524:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000526:	07da      	lsls	r2, r3, #31
 8000528:	d405      	bmi.n	8000536 <_puts_r+0x4e>
 800052a:	89a3      	ldrh	r3, [r4, #12]
 800052c:	059b      	lsls	r3, r3, #22
 800052e:	d402      	bmi.n	8000536 <_puts_r+0x4e>
 8000530:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000532:	f000 f86b 	bl	800060c <__retarget_lock_release_recursive>
 8000536:	4628      	mov	r0, r5
 8000538:	bd70      	pop	{r4, r5, r6, pc}
 800053a:	2b00      	cmp	r3, #0
 800053c:	da04      	bge.n	8000548 <_puts_r+0x60>
 800053e:	69a2      	ldr	r2, [r4, #24]
 8000540:	429a      	cmp	r2, r3
 8000542:	dc17      	bgt.n	8000574 <_puts_r+0x8c>
 8000544:	290a      	cmp	r1, #10
 8000546:	d015      	beq.n	8000574 <_puts_r+0x8c>
 8000548:	6823      	ldr	r3, [r4, #0]
 800054a:	1c5a      	adds	r2, r3, #1
 800054c:	6022      	str	r2, [r4, #0]
 800054e:	7019      	strb	r1, [r3, #0]
 8000550:	68a3      	ldr	r3, [r4, #8]
 8000552:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000556:	3b01      	subs	r3, #1
 8000558:	60a3      	str	r3, [r4, #8]
 800055a:	2900      	cmp	r1, #0
 800055c:	d1ed      	bne.n	800053a <_puts_r+0x52>
 800055e:	2b00      	cmp	r3, #0
 8000560:	da11      	bge.n	8000586 <_puts_r+0x9e>
 8000562:	4622      	mov	r2, r4
 8000564:	210a      	movs	r1, #10
 8000566:	4628      	mov	r0, r5
 8000568:	f000 f9eb 	bl	8000942 <__swbuf_r>
 800056c:	3001      	adds	r0, #1
 800056e:	d0d7      	beq.n	8000520 <_puts_r+0x38>
 8000570:	250a      	movs	r5, #10
 8000572:	e7d7      	b.n	8000524 <_puts_r+0x3c>
 8000574:	4622      	mov	r2, r4
 8000576:	4628      	mov	r0, r5
 8000578:	f000 f9e3 	bl	8000942 <__swbuf_r>
 800057c:	3001      	adds	r0, #1
 800057e:	d1e7      	bne.n	8000550 <_puts_r+0x68>
 8000580:	e7ce      	b.n	8000520 <_puts_r+0x38>
 8000582:	3e01      	subs	r6, #1
 8000584:	e7e4      	b.n	8000550 <_puts_r+0x68>
 8000586:	6823      	ldr	r3, [r4, #0]
 8000588:	1c5a      	adds	r2, r3, #1
 800058a:	6022      	str	r2, [r4, #0]
 800058c:	220a      	movs	r2, #10
 800058e:	701a      	strb	r2, [r3, #0]
 8000590:	e7ee      	b.n	8000570 <_puts_r+0x88>
	...

08000594 <puts>:
 8000594:	4b02      	ldr	r3, [pc, #8]	@ (80005a0 <puts+0xc>)
 8000596:	4601      	mov	r1, r0
 8000598:	6818      	ldr	r0, [r3, #0]
 800059a:	f7ff bfa5 	b.w	80004e8 <_puts_r>
 800059e:	bf00      	nop
 80005a0:	2000000c 	.word	0x2000000c

080005a4 <memset>:
 80005a4:	4603      	mov	r3, r0
 80005a6:	4402      	add	r2, r0
 80005a8:	4293      	cmp	r3, r2
 80005aa:	d100      	bne.n	80005ae <memset+0xa>
 80005ac:	4770      	bx	lr
 80005ae:	f803 1b01 	strb.w	r1, [r3], #1
 80005b2:	e7f9      	b.n	80005a8 <memset+0x4>

080005b4 <__errno>:
 80005b4:	4b01      	ldr	r3, [pc, #4]	@ (80005bc <__errno+0x8>)
 80005b6:	6818      	ldr	r0, [r3, #0]
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop
 80005bc:	2000000c 	.word	0x2000000c

080005c0 <__libc_init_array>:
 80005c0:	b570      	push	{r4, r5, r6, lr}
 80005c2:	2600      	movs	r6, #0
 80005c4:	4d0c      	ldr	r5, [pc, #48]	@ (80005f8 <__libc_init_array+0x38>)
 80005c6:	4c0d      	ldr	r4, [pc, #52]	@ (80005fc <__libc_init_array+0x3c>)
 80005c8:	1b64      	subs	r4, r4, r5
 80005ca:	10a4      	asrs	r4, r4, #2
 80005cc:	42a6      	cmp	r6, r4
 80005ce:	d109      	bne.n	80005e4 <__libc_init_array+0x24>
 80005d0:	f000 fb6e 	bl	8000cb0 <_init>
 80005d4:	2600      	movs	r6, #0
 80005d6:	4d0a      	ldr	r5, [pc, #40]	@ (8000600 <__libc_init_array+0x40>)
 80005d8:	4c0a      	ldr	r4, [pc, #40]	@ (8000604 <__libc_init_array+0x44>)
 80005da:	1b64      	subs	r4, r4, r5
 80005dc:	10a4      	asrs	r4, r4, #2
 80005de:	42a6      	cmp	r6, r4
 80005e0:	d105      	bne.n	80005ee <__libc_init_array+0x2e>
 80005e2:	bd70      	pop	{r4, r5, r6, pc}
 80005e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80005e8:	4798      	blx	r3
 80005ea:	3601      	adds	r6, #1
 80005ec:	e7ee      	b.n	80005cc <__libc_init_array+0xc>
 80005ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80005f2:	4798      	blx	r3
 80005f4:	3601      	adds	r6, #1
 80005f6:	e7f2      	b.n	80005de <__libc_init_array+0x1e>
 80005f8:	08000cd4 	.word	0x08000cd4
 80005fc:	08000cd4 	.word	0x08000cd4
 8000600:	08000cd4 	.word	0x08000cd4
 8000604:	08000cd8 	.word	0x08000cd8

08000608 <__retarget_lock_init_recursive>:
 8000608:	4770      	bx	lr

0800060a <__retarget_lock_acquire_recursive>:
 800060a:	4770      	bx	lr

0800060c <__retarget_lock_release_recursive>:
 800060c:	4770      	bx	lr
	...

08000610 <sbrk_aligned>:
 8000610:	b570      	push	{r4, r5, r6, lr}
 8000612:	4e0f      	ldr	r6, [pc, #60]	@ (8000650 <sbrk_aligned+0x40>)
 8000614:	460c      	mov	r4, r1
 8000616:	6831      	ldr	r1, [r6, #0]
 8000618:	4605      	mov	r5, r0
 800061a:	b911      	cbnz	r1, 8000622 <sbrk_aligned+0x12>
 800061c:	f000 fabc 	bl	8000b98 <_sbrk_r>
 8000620:	6030      	str	r0, [r6, #0]
 8000622:	4621      	mov	r1, r4
 8000624:	4628      	mov	r0, r5
 8000626:	f000 fab7 	bl	8000b98 <_sbrk_r>
 800062a:	1c43      	adds	r3, r0, #1
 800062c:	d103      	bne.n	8000636 <sbrk_aligned+0x26>
 800062e:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8000632:	4620      	mov	r0, r4
 8000634:	bd70      	pop	{r4, r5, r6, pc}
 8000636:	1cc4      	adds	r4, r0, #3
 8000638:	f024 0403 	bic.w	r4, r4, #3
 800063c:	42a0      	cmp	r0, r4
 800063e:	d0f8      	beq.n	8000632 <sbrk_aligned+0x22>
 8000640:	1a21      	subs	r1, r4, r0
 8000642:	4628      	mov	r0, r5
 8000644:	f000 faa8 	bl	8000b98 <_sbrk_r>
 8000648:	3001      	adds	r0, #1
 800064a:	d1f2      	bne.n	8000632 <sbrk_aligned+0x22>
 800064c:	e7ef      	b.n	800062e <sbrk_aligned+0x1e>
 800064e:	bf00      	nop
 8000650:	200001bc 	.word	0x200001bc

08000654 <_malloc_r>:
 8000654:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000658:	1ccd      	adds	r5, r1, #3
 800065a:	f025 0503 	bic.w	r5, r5, #3
 800065e:	3508      	adds	r5, #8
 8000660:	2d0c      	cmp	r5, #12
 8000662:	bf38      	it	cc
 8000664:	250c      	movcc	r5, #12
 8000666:	2d00      	cmp	r5, #0
 8000668:	4606      	mov	r6, r0
 800066a:	db01      	blt.n	8000670 <_malloc_r+0x1c>
 800066c:	42a9      	cmp	r1, r5
 800066e:	d904      	bls.n	800067a <_malloc_r+0x26>
 8000670:	230c      	movs	r3, #12
 8000672:	6033      	str	r3, [r6, #0]
 8000674:	2000      	movs	r0, #0
 8000676:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800067a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000750 <_malloc_r+0xfc>
 800067e:	f000 f911 	bl	80008a4 <__malloc_lock>
 8000682:	f8d8 3000 	ldr.w	r3, [r8]
 8000686:	461c      	mov	r4, r3
 8000688:	bb44      	cbnz	r4, 80006dc <_malloc_r+0x88>
 800068a:	4629      	mov	r1, r5
 800068c:	4630      	mov	r0, r6
 800068e:	f7ff ffbf 	bl	8000610 <sbrk_aligned>
 8000692:	1c43      	adds	r3, r0, #1
 8000694:	4604      	mov	r4, r0
 8000696:	d158      	bne.n	800074a <_malloc_r+0xf6>
 8000698:	f8d8 4000 	ldr.w	r4, [r8]
 800069c:	4627      	mov	r7, r4
 800069e:	2f00      	cmp	r7, #0
 80006a0:	d143      	bne.n	800072a <_malloc_r+0xd6>
 80006a2:	2c00      	cmp	r4, #0
 80006a4:	d04b      	beq.n	800073e <_malloc_r+0xea>
 80006a6:	6823      	ldr	r3, [r4, #0]
 80006a8:	4639      	mov	r1, r7
 80006aa:	4630      	mov	r0, r6
 80006ac:	eb04 0903 	add.w	r9, r4, r3
 80006b0:	f000 fa72 	bl	8000b98 <_sbrk_r>
 80006b4:	4581      	cmp	r9, r0
 80006b6:	d142      	bne.n	800073e <_malloc_r+0xea>
 80006b8:	6821      	ldr	r1, [r4, #0]
 80006ba:	4630      	mov	r0, r6
 80006bc:	1a6d      	subs	r5, r5, r1
 80006be:	4629      	mov	r1, r5
 80006c0:	f7ff ffa6 	bl	8000610 <sbrk_aligned>
 80006c4:	3001      	adds	r0, #1
 80006c6:	d03a      	beq.n	800073e <_malloc_r+0xea>
 80006c8:	6823      	ldr	r3, [r4, #0]
 80006ca:	442b      	add	r3, r5
 80006cc:	6023      	str	r3, [r4, #0]
 80006ce:	f8d8 3000 	ldr.w	r3, [r8]
 80006d2:	685a      	ldr	r2, [r3, #4]
 80006d4:	bb62      	cbnz	r2, 8000730 <_malloc_r+0xdc>
 80006d6:	f8c8 7000 	str.w	r7, [r8]
 80006da:	e00f      	b.n	80006fc <_malloc_r+0xa8>
 80006dc:	6822      	ldr	r2, [r4, #0]
 80006de:	1b52      	subs	r2, r2, r5
 80006e0:	d420      	bmi.n	8000724 <_malloc_r+0xd0>
 80006e2:	2a0b      	cmp	r2, #11
 80006e4:	d917      	bls.n	8000716 <_malloc_r+0xc2>
 80006e6:	1961      	adds	r1, r4, r5
 80006e8:	42a3      	cmp	r3, r4
 80006ea:	6025      	str	r5, [r4, #0]
 80006ec:	bf18      	it	ne
 80006ee:	6059      	strne	r1, [r3, #4]
 80006f0:	6863      	ldr	r3, [r4, #4]
 80006f2:	bf08      	it	eq
 80006f4:	f8c8 1000 	streq.w	r1, [r8]
 80006f8:	5162      	str	r2, [r4, r5]
 80006fa:	604b      	str	r3, [r1, #4]
 80006fc:	4630      	mov	r0, r6
 80006fe:	f000 f8d7 	bl	80008b0 <__malloc_unlock>
 8000702:	f104 000b 	add.w	r0, r4, #11
 8000706:	1d23      	adds	r3, r4, #4
 8000708:	f020 0007 	bic.w	r0, r0, #7
 800070c:	1ac2      	subs	r2, r0, r3
 800070e:	bf1c      	itt	ne
 8000710:	1a1b      	subne	r3, r3, r0
 8000712:	50a3      	strne	r3, [r4, r2]
 8000714:	e7af      	b.n	8000676 <_malloc_r+0x22>
 8000716:	6862      	ldr	r2, [r4, #4]
 8000718:	42a3      	cmp	r3, r4
 800071a:	bf0c      	ite	eq
 800071c:	f8c8 2000 	streq.w	r2, [r8]
 8000720:	605a      	strne	r2, [r3, #4]
 8000722:	e7eb      	b.n	80006fc <_malloc_r+0xa8>
 8000724:	4623      	mov	r3, r4
 8000726:	6864      	ldr	r4, [r4, #4]
 8000728:	e7ae      	b.n	8000688 <_malloc_r+0x34>
 800072a:	463c      	mov	r4, r7
 800072c:	687f      	ldr	r7, [r7, #4]
 800072e:	e7b6      	b.n	800069e <_malloc_r+0x4a>
 8000730:	461a      	mov	r2, r3
 8000732:	685b      	ldr	r3, [r3, #4]
 8000734:	42a3      	cmp	r3, r4
 8000736:	d1fb      	bne.n	8000730 <_malloc_r+0xdc>
 8000738:	2300      	movs	r3, #0
 800073a:	6053      	str	r3, [r2, #4]
 800073c:	e7de      	b.n	80006fc <_malloc_r+0xa8>
 800073e:	230c      	movs	r3, #12
 8000740:	4630      	mov	r0, r6
 8000742:	6033      	str	r3, [r6, #0]
 8000744:	f000 f8b4 	bl	80008b0 <__malloc_unlock>
 8000748:	e794      	b.n	8000674 <_malloc_r+0x20>
 800074a:	6005      	str	r5, [r0, #0]
 800074c:	e7d6      	b.n	80006fc <_malloc_r+0xa8>
 800074e:	bf00      	nop
 8000750:	200001c0 	.word	0x200001c0

08000754 <__sflush_r>:
 8000754:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800075a:	0716      	lsls	r6, r2, #28
 800075c:	4605      	mov	r5, r0
 800075e:	460c      	mov	r4, r1
 8000760:	d454      	bmi.n	800080c <__sflush_r+0xb8>
 8000762:	684b      	ldr	r3, [r1, #4]
 8000764:	2b00      	cmp	r3, #0
 8000766:	dc02      	bgt.n	800076e <__sflush_r+0x1a>
 8000768:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800076a:	2b00      	cmp	r3, #0
 800076c:	dd48      	ble.n	8000800 <__sflush_r+0xac>
 800076e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000770:	2e00      	cmp	r6, #0
 8000772:	d045      	beq.n	8000800 <__sflush_r+0xac>
 8000774:	2300      	movs	r3, #0
 8000776:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800077a:	682f      	ldr	r7, [r5, #0]
 800077c:	6a21      	ldr	r1, [r4, #32]
 800077e:	602b      	str	r3, [r5, #0]
 8000780:	d030      	beq.n	80007e4 <__sflush_r+0x90>
 8000782:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000784:	89a3      	ldrh	r3, [r4, #12]
 8000786:	0759      	lsls	r1, r3, #29
 8000788:	d505      	bpl.n	8000796 <__sflush_r+0x42>
 800078a:	6863      	ldr	r3, [r4, #4]
 800078c:	1ad2      	subs	r2, r2, r3
 800078e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000790:	b10b      	cbz	r3, 8000796 <__sflush_r+0x42>
 8000792:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000794:	1ad2      	subs	r2, r2, r3
 8000796:	2300      	movs	r3, #0
 8000798:	4628      	mov	r0, r5
 800079a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800079c:	6a21      	ldr	r1, [r4, #32]
 800079e:	47b0      	blx	r6
 80007a0:	1c43      	adds	r3, r0, #1
 80007a2:	89a3      	ldrh	r3, [r4, #12]
 80007a4:	d106      	bne.n	80007b4 <__sflush_r+0x60>
 80007a6:	6829      	ldr	r1, [r5, #0]
 80007a8:	291d      	cmp	r1, #29
 80007aa:	d82b      	bhi.n	8000804 <__sflush_r+0xb0>
 80007ac:	4a28      	ldr	r2, [pc, #160]	@ (8000850 <__sflush_r+0xfc>)
 80007ae:	40ca      	lsrs	r2, r1
 80007b0:	07d6      	lsls	r6, r2, #31
 80007b2:	d527      	bpl.n	8000804 <__sflush_r+0xb0>
 80007b4:	2200      	movs	r2, #0
 80007b6:	6062      	str	r2, [r4, #4]
 80007b8:	6922      	ldr	r2, [r4, #16]
 80007ba:	04d9      	lsls	r1, r3, #19
 80007bc:	6022      	str	r2, [r4, #0]
 80007be:	d504      	bpl.n	80007ca <__sflush_r+0x76>
 80007c0:	1c42      	adds	r2, r0, #1
 80007c2:	d101      	bne.n	80007c8 <__sflush_r+0x74>
 80007c4:	682b      	ldr	r3, [r5, #0]
 80007c6:	b903      	cbnz	r3, 80007ca <__sflush_r+0x76>
 80007c8:	6560      	str	r0, [r4, #84]	@ 0x54
 80007ca:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80007cc:	602f      	str	r7, [r5, #0]
 80007ce:	b1b9      	cbz	r1, 8000800 <__sflush_r+0xac>
 80007d0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80007d4:	4299      	cmp	r1, r3
 80007d6:	d002      	beq.n	80007de <__sflush_r+0x8a>
 80007d8:	4628      	mov	r0, r5
 80007da:	f000 fa21 	bl	8000c20 <_free_r>
 80007de:	2300      	movs	r3, #0
 80007e0:	6363      	str	r3, [r4, #52]	@ 0x34
 80007e2:	e00d      	b.n	8000800 <__sflush_r+0xac>
 80007e4:	2301      	movs	r3, #1
 80007e6:	4628      	mov	r0, r5
 80007e8:	47b0      	blx	r6
 80007ea:	4602      	mov	r2, r0
 80007ec:	1c50      	adds	r0, r2, #1
 80007ee:	d1c9      	bne.n	8000784 <__sflush_r+0x30>
 80007f0:	682b      	ldr	r3, [r5, #0]
 80007f2:	2b00      	cmp	r3, #0
 80007f4:	d0c6      	beq.n	8000784 <__sflush_r+0x30>
 80007f6:	2b1d      	cmp	r3, #29
 80007f8:	d001      	beq.n	80007fe <__sflush_r+0xaa>
 80007fa:	2b16      	cmp	r3, #22
 80007fc:	d11d      	bne.n	800083a <__sflush_r+0xe6>
 80007fe:	602f      	str	r7, [r5, #0]
 8000800:	2000      	movs	r0, #0
 8000802:	e021      	b.n	8000848 <__sflush_r+0xf4>
 8000804:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000808:	b21b      	sxth	r3, r3
 800080a:	e01a      	b.n	8000842 <__sflush_r+0xee>
 800080c:	690f      	ldr	r7, [r1, #16]
 800080e:	2f00      	cmp	r7, #0
 8000810:	d0f6      	beq.n	8000800 <__sflush_r+0xac>
 8000812:	0793      	lsls	r3, r2, #30
 8000814:	bf18      	it	ne
 8000816:	2300      	movne	r3, #0
 8000818:	680e      	ldr	r6, [r1, #0]
 800081a:	bf08      	it	eq
 800081c:	694b      	ldreq	r3, [r1, #20]
 800081e:	1bf6      	subs	r6, r6, r7
 8000820:	600f      	str	r7, [r1, #0]
 8000822:	608b      	str	r3, [r1, #8]
 8000824:	2e00      	cmp	r6, #0
 8000826:	ddeb      	ble.n	8000800 <__sflush_r+0xac>
 8000828:	4633      	mov	r3, r6
 800082a:	463a      	mov	r2, r7
 800082c:	4628      	mov	r0, r5
 800082e:	6a21      	ldr	r1, [r4, #32]
 8000830:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8000834:	47e0      	blx	ip
 8000836:	2800      	cmp	r0, #0
 8000838:	dc07      	bgt.n	800084a <__sflush_r+0xf6>
 800083a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800083e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000842:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000846:	81a3      	strh	r3, [r4, #12]
 8000848:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800084a:	4407      	add	r7, r0
 800084c:	1a36      	subs	r6, r6, r0
 800084e:	e7e9      	b.n	8000824 <__sflush_r+0xd0>
 8000850:	20400001 	.word	0x20400001

08000854 <_fflush_r>:
 8000854:	b538      	push	{r3, r4, r5, lr}
 8000856:	690b      	ldr	r3, [r1, #16]
 8000858:	4605      	mov	r5, r0
 800085a:	460c      	mov	r4, r1
 800085c:	b913      	cbnz	r3, 8000864 <_fflush_r+0x10>
 800085e:	2500      	movs	r5, #0
 8000860:	4628      	mov	r0, r5
 8000862:	bd38      	pop	{r3, r4, r5, pc}
 8000864:	b118      	cbz	r0, 800086e <_fflush_r+0x1a>
 8000866:	6a03      	ldr	r3, [r0, #32]
 8000868:	b90b      	cbnz	r3, 800086e <_fflush_r+0x1a>
 800086a:	f7ff fe07 	bl	800047c <__sinit>
 800086e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000872:	2b00      	cmp	r3, #0
 8000874:	d0f3      	beq.n	800085e <_fflush_r+0xa>
 8000876:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000878:	07d0      	lsls	r0, r2, #31
 800087a:	d404      	bmi.n	8000886 <_fflush_r+0x32>
 800087c:	0599      	lsls	r1, r3, #22
 800087e:	d402      	bmi.n	8000886 <_fflush_r+0x32>
 8000880:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000882:	f7ff fec2 	bl	800060a <__retarget_lock_acquire_recursive>
 8000886:	4628      	mov	r0, r5
 8000888:	4621      	mov	r1, r4
 800088a:	f7ff ff63 	bl	8000754 <__sflush_r>
 800088e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000890:	4605      	mov	r5, r0
 8000892:	07da      	lsls	r2, r3, #31
 8000894:	d4e4      	bmi.n	8000860 <_fflush_r+0xc>
 8000896:	89a3      	ldrh	r3, [r4, #12]
 8000898:	059b      	lsls	r3, r3, #22
 800089a:	d4e1      	bmi.n	8000860 <_fflush_r+0xc>
 800089c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800089e:	f7ff feb5 	bl	800060c <__retarget_lock_release_recursive>
 80008a2:	e7dd      	b.n	8000860 <_fflush_r+0xc>

080008a4 <__malloc_lock>:
 80008a4:	4801      	ldr	r0, [pc, #4]	@ (80008ac <__malloc_lock+0x8>)
 80008a6:	f7ff beb0 	b.w	800060a <__retarget_lock_acquire_recursive>
 80008aa:	bf00      	nop
 80008ac:	200001b8 	.word	0x200001b8

080008b0 <__malloc_unlock>:
 80008b0:	4801      	ldr	r0, [pc, #4]	@ (80008b8 <__malloc_unlock+0x8>)
 80008b2:	f7ff beab 	b.w	800060c <__retarget_lock_release_recursive>
 80008b6:	bf00      	nop
 80008b8:	200001b8 	.word	0x200001b8

080008bc <__sread>:
 80008bc:	b510      	push	{r4, lr}
 80008be:	460c      	mov	r4, r1
 80008c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008c4:	f000 f956 	bl	8000b74 <_read_r>
 80008c8:	2800      	cmp	r0, #0
 80008ca:	bfab      	itete	ge
 80008cc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80008ce:	89a3      	ldrhlt	r3, [r4, #12]
 80008d0:	181b      	addge	r3, r3, r0
 80008d2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80008d6:	bfac      	ite	ge
 80008d8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80008da:	81a3      	strhlt	r3, [r4, #12]
 80008dc:	bd10      	pop	{r4, pc}

080008de <__swrite>:
 80008de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008e2:	461f      	mov	r7, r3
 80008e4:	898b      	ldrh	r3, [r1, #12]
 80008e6:	4605      	mov	r5, r0
 80008e8:	05db      	lsls	r3, r3, #23
 80008ea:	460c      	mov	r4, r1
 80008ec:	4616      	mov	r6, r2
 80008ee:	d505      	bpl.n	80008fc <__swrite+0x1e>
 80008f0:	2302      	movs	r3, #2
 80008f2:	2200      	movs	r2, #0
 80008f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008f8:	f000 f92a 	bl	8000b50 <_lseek_r>
 80008fc:	89a3      	ldrh	r3, [r4, #12]
 80008fe:	4632      	mov	r2, r6
 8000900:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000904:	81a3      	strh	r3, [r4, #12]
 8000906:	4628      	mov	r0, r5
 8000908:	463b      	mov	r3, r7
 800090a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800090e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000912:	f000 b951 	b.w	8000bb8 <_write_r>

08000916 <__sseek>:
 8000916:	b510      	push	{r4, lr}
 8000918:	460c      	mov	r4, r1
 800091a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800091e:	f000 f917 	bl	8000b50 <_lseek_r>
 8000922:	1c43      	adds	r3, r0, #1
 8000924:	89a3      	ldrh	r3, [r4, #12]
 8000926:	bf15      	itete	ne
 8000928:	6560      	strne	r0, [r4, #84]	@ 0x54
 800092a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800092e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000932:	81a3      	strheq	r3, [r4, #12]
 8000934:	bf18      	it	ne
 8000936:	81a3      	strhne	r3, [r4, #12]
 8000938:	bd10      	pop	{r4, pc}

0800093a <__sclose>:
 800093a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800093e:	f000 b94d 	b.w	8000bdc <_close_r>

08000942 <__swbuf_r>:
 8000942:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000944:	460e      	mov	r6, r1
 8000946:	4614      	mov	r4, r2
 8000948:	4605      	mov	r5, r0
 800094a:	b118      	cbz	r0, 8000954 <__swbuf_r+0x12>
 800094c:	6a03      	ldr	r3, [r0, #32]
 800094e:	b90b      	cbnz	r3, 8000954 <__swbuf_r+0x12>
 8000950:	f7ff fd94 	bl	800047c <__sinit>
 8000954:	69a3      	ldr	r3, [r4, #24]
 8000956:	60a3      	str	r3, [r4, #8]
 8000958:	89a3      	ldrh	r3, [r4, #12]
 800095a:	071a      	lsls	r2, r3, #28
 800095c:	d501      	bpl.n	8000962 <__swbuf_r+0x20>
 800095e:	6923      	ldr	r3, [r4, #16]
 8000960:	b943      	cbnz	r3, 8000974 <__swbuf_r+0x32>
 8000962:	4621      	mov	r1, r4
 8000964:	4628      	mov	r0, r5
 8000966:	f000 f82b 	bl	80009c0 <__swsetup_r>
 800096a:	b118      	cbz	r0, 8000974 <__swbuf_r+0x32>
 800096c:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 8000970:	4638      	mov	r0, r7
 8000972:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000974:	6823      	ldr	r3, [r4, #0]
 8000976:	6922      	ldr	r2, [r4, #16]
 8000978:	b2f6      	uxtb	r6, r6
 800097a:	1a98      	subs	r0, r3, r2
 800097c:	6963      	ldr	r3, [r4, #20]
 800097e:	4637      	mov	r7, r6
 8000980:	4283      	cmp	r3, r0
 8000982:	dc05      	bgt.n	8000990 <__swbuf_r+0x4e>
 8000984:	4621      	mov	r1, r4
 8000986:	4628      	mov	r0, r5
 8000988:	f7ff ff64 	bl	8000854 <_fflush_r>
 800098c:	2800      	cmp	r0, #0
 800098e:	d1ed      	bne.n	800096c <__swbuf_r+0x2a>
 8000990:	68a3      	ldr	r3, [r4, #8]
 8000992:	3b01      	subs	r3, #1
 8000994:	60a3      	str	r3, [r4, #8]
 8000996:	6823      	ldr	r3, [r4, #0]
 8000998:	1c5a      	adds	r2, r3, #1
 800099a:	6022      	str	r2, [r4, #0]
 800099c:	701e      	strb	r6, [r3, #0]
 800099e:	6962      	ldr	r2, [r4, #20]
 80009a0:	1c43      	adds	r3, r0, #1
 80009a2:	429a      	cmp	r2, r3
 80009a4:	d004      	beq.n	80009b0 <__swbuf_r+0x6e>
 80009a6:	89a3      	ldrh	r3, [r4, #12]
 80009a8:	07db      	lsls	r3, r3, #31
 80009aa:	d5e1      	bpl.n	8000970 <__swbuf_r+0x2e>
 80009ac:	2e0a      	cmp	r6, #10
 80009ae:	d1df      	bne.n	8000970 <__swbuf_r+0x2e>
 80009b0:	4621      	mov	r1, r4
 80009b2:	4628      	mov	r0, r5
 80009b4:	f7ff ff4e 	bl	8000854 <_fflush_r>
 80009b8:	2800      	cmp	r0, #0
 80009ba:	d0d9      	beq.n	8000970 <__swbuf_r+0x2e>
 80009bc:	e7d6      	b.n	800096c <__swbuf_r+0x2a>
	...

080009c0 <__swsetup_r>:
 80009c0:	b538      	push	{r3, r4, r5, lr}
 80009c2:	4b29      	ldr	r3, [pc, #164]	@ (8000a68 <__swsetup_r+0xa8>)
 80009c4:	4605      	mov	r5, r0
 80009c6:	6818      	ldr	r0, [r3, #0]
 80009c8:	460c      	mov	r4, r1
 80009ca:	b118      	cbz	r0, 80009d4 <__swsetup_r+0x14>
 80009cc:	6a03      	ldr	r3, [r0, #32]
 80009ce:	b90b      	cbnz	r3, 80009d4 <__swsetup_r+0x14>
 80009d0:	f7ff fd54 	bl	800047c <__sinit>
 80009d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009d8:	0719      	lsls	r1, r3, #28
 80009da:	d422      	bmi.n	8000a22 <__swsetup_r+0x62>
 80009dc:	06da      	lsls	r2, r3, #27
 80009de:	d407      	bmi.n	80009f0 <__swsetup_r+0x30>
 80009e0:	2209      	movs	r2, #9
 80009e2:	602a      	str	r2, [r5, #0]
 80009e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80009e8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80009ec:	81a3      	strh	r3, [r4, #12]
 80009ee:	e033      	b.n	8000a58 <__swsetup_r+0x98>
 80009f0:	0758      	lsls	r0, r3, #29
 80009f2:	d512      	bpl.n	8000a1a <__swsetup_r+0x5a>
 80009f4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80009f6:	b141      	cbz	r1, 8000a0a <__swsetup_r+0x4a>
 80009f8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80009fc:	4299      	cmp	r1, r3
 80009fe:	d002      	beq.n	8000a06 <__swsetup_r+0x46>
 8000a00:	4628      	mov	r0, r5
 8000a02:	f000 f90d 	bl	8000c20 <_free_r>
 8000a06:	2300      	movs	r3, #0
 8000a08:	6363      	str	r3, [r4, #52]	@ 0x34
 8000a0a:	89a3      	ldrh	r3, [r4, #12]
 8000a0c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000a10:	81a3      	strh	r3, [r4, #12]
 8000a12:	2300      	movs	r3, #0
 8000a14:	6063      	str	r3, [r4, #4]
 8000a16:	6923      	ldr	r3, [r4, #16]
 8000a18:	6023      	str	r3, [r4, #0]
 8000a1a:	89a3      	ldrh	r3, [r4, #12]
 8000a1c:	f043 0308 	orr.w	r3, r3, #8
 8000a20:	81a3      	strh	r3, [r4, #12]
 8000a22:	6923      	ldr	r3, [r4, #16]
 8000a24:	b94b      	cbnz	r3, 8000a3a <__swsetup_r+0x7a>
 8000a26:	89a3      	ldrh	r3, [r4, #12]
 8000a28:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000a2c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000a30:	d003      	beq.n	8000a3a <__swsetup_r+0x7a>
 8000a32:	4621      	mov	r1, r4
 8000a34:	4628      	mov	r0, r5
 8000a36:	f000 f83e 	bl	8000ab6 <__smakebuf_r>
 8000a3a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a3e:	f013 0201 	ands.w	r2, r3, #1
 8000a42:	d00a      	beq.n	8000a5a <__swsetup_r+0x9a>
 8000a44:	2200      	movs	r2, #0
 8000a46:	60a2      	str	r2, [r4, #8]
 8000a48:	6962      	ldr	r2, [r4, #20]
 8000a4a:	4252      	negs	r2, r2
 8000a4c:	61a2      	str	r2, [r4, #24]
 8000a4e:	6922      	ldr	r2, [r4, #16]
 8000a50:	b942      	cbnz	r2, 8000a64 <__swsetup_r+0xa4>
 8000a52:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000a56:	d1c5      	bne.n	80009e4 <__swsetup_r+0x24>
 8000a58:	bd38      	pop	{r3, r4, r5, pc}
 8000a5a:	0799      	lsls	r1, r3, #30
 8000a5c:	bf58      	it	pl
 8000a5e:	6962      	ldrpl	r2, [r4, #20]
 8000a60:	60a2      	str	r2, [r4, #8]
 8000a62:	e7f4      	b.n	8000a4e <__swsetup_r+0x8e>
 8000a64:	2000      	movs	r0, #0
 8000a66:	e7f7      	b.n	8000a58 <__swsetup_r+0x98>
 8000a68:	2000000c 	.word	0x2000000c

08000a6c <__swhatbuf_r>:
 8000a6c:	b570      	push	{r4, r5, r6, lr}
 8000a6e:	460c      	mov	r4, r1
 8000a70:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a74:	4615      	mov	r5, r2
 8000a76:	2900      	cmp	r1, #0
 8000a78:	461e      	mov	r6, r3
 8000a7a:	b096      	sub	sp, #88	@ 0x58
 8000a7c:	da0c      	bge.n	8000a98 <__swhatbuf_r+0x2c>
 8000a7e:	89a3      	ldrh	r3, [r4, #12]
 8000a80:	2100      	movs	r1, #0
 8000a82:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8000a86:	bf14      	ite	ne
 8000a88:	2340      	movne	r3, #64	@ 0x40
 8000a8a:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8000a8e:	2000      	movs	r0, #0
 8000a90:	6031      	str	r1, [r6, #0]
 8000a92:	602b      	str	r3, [r5, #0]
 8000a94:	b016      	add	sp, #88	@ 0x58
 8000a96:	bd70      	pop	{r4, r5, r6, pc}
 8000a98:	466a      	mov	r2, sp
 8000a9a:	f000 f8af 	bl	8000bfc <_fstat_r>
 8000a9e:	2800      	cmp	r0, #0
 8000aa0:	dbed      	blt.n	8000a7e <__swhatbuf_r+0x12>
 8000aa2:	9901      	ldr	r1, [sp, #4]
 8000aa4:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8000aa8:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8000aac:	4259      	negs	r1, r3
 8000aae:	4159      	adcs	r1, r3
 8000ab0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000ab4:	e7eb      	b.n	8000a8e <__swhatbuf_r+0x22>

08000ab6 <__smakebuf_r>:
 8000ab6:	898b      	ldrh	r3, [r1, #12]
 8000ab8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000aba:	079d      	lsls	r5, r3, #30
 8000abc:	4606      	mov	r6, r0
 8000abe:	460c      	mov	r4, r1
 8000ac0:	d507      	bpl.n	8000ad2 <__smakebuf_r+0x1c>
 8000ac2:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8000ac6:	6023      	str	r3, [r4, #0]
 8000ac8:	6123      	str	r3, [r4, #16]
 8000aca:	2301      	movs	r3, #1
 8000acc:	6163      	str	r3, [r4, #20]
 8000ace:	b003      	add	sp, #12
 8000ad0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ad2:	466a      	mov	r2, sp
 8000ad4:	ab01      	add	r3, sp, #4
 8000ad6:	f7ff ffc9 	bl	8000a6c <__swhatbuf_r>
 8000ada:	9f00      	ldr	r7, [sp, #0]
 8000adc:	4605      	mov	r5, r0
 8000ade:	4639      	mov	r1, r7
 8000ae0:	4630      	mov	r0, r6
 8000ae2:	f7ff fdb7 	bl	8000654 <_malloc_r>
 8000ae6:	b948      	cbnz	r0, 8000afc <__smakebuf_r+0x46>
 8000ae8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000aec:	059a      	lsls	r2, r3, #22
 8000aee:	d4ee      	bmi.n	8000ace <__smakebuf_r+0x18>
 8000af0:	f023 0303 	bic.w	r3, r3, #3
 8000af4:	f043 0302 	orr.w	r3, r3, #2
 8000af8:	81a3      	strh	r3, [r4, #12]
 8000afa:	e7e2      	b.n	8000ac2 <__smakebuf_r+0xc>
 8000afc:	89a3      	ldrh	r3, [r4, #12]
 8000afe:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8000b02:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000b06:	81a3      	strh	r3, [r4, #12]
 8000b08:	9b01      	ldr	r3, [sp, #4]
 8000b0a:	6020      	str	r0, [r4, #0]
 8000b0c:	b15b      	cbz	r3, 8000b26 <__smakebuf_r+0x70>
 8000b0e:	4630      	mov	r0, r6
 8000b10:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b14:	f000 f80c 	bl	8000b30 <_isatty_r>
 8000b18:	b128      	cbz	r0, 8000b26 <__smakebuf_r+0x70>
 8000b1a:	89a3      	ldrh	r3, [r4, #12]
 8000b1c:	f023 0303 	bic.w	r3, r3, #3
 8000b20:	f043 0301 	orr.w	r3, r3, #1
 8000b24:	81a3      	strh	r3, [r4, #12]
 8000b26:	89a3      	ldrh	r3, [r4, #12]
 8000b28:	431d      	orrs	r5, r3
 8000b2a:	81a5      	strh	r5, [r4, #12]
 8000b2c:	e7cf      	b.n	8000ace <__smakebuf_r+0x18>
	...

08000b30 <_isatty_r>:
 8000b30:	b538      	push	{r3, r4, r5, lr}
 8000b32:	2300      	movs	r3, #0
 8000b34:	4d05      	ldr	r5, [pc, #20]	@ (8000b4c <_isatty_r+0x1c>)
 8000b36:	4604      	mov	r4, r0
 8000b38:	4608      	mov	r0, r1
 8000b3a:	602b      	str	r3, [r5, #0]
 8000b3c:	f7ff fb9b 	bl	8000276 <_isatty>
 8000b40:	1c43      	adds	r3, r0, #1
 8000b42:	d102      	bne.n	8000b4a <_isatty_r+0x1a>
 8000b44:	682b      	ldr	r3, [r5, #0]
 8000b46:	b103      	cbz	r3, 8000b4a <_isatty_r+0x1a>
 8000b48:	6023      	str	r3, [r4, #0]
 8000b4a:	bd38      	pop	{r3, r4, r5, pc}
 8000b4c:	200001c4 	.word	0x200001c4

08000b50 <_lseek_r>:
 8000b50:	b538      	push	{r3, r4, r5, lr}
 8000b52:	4604      	mov	r4, r0
 8000b54:	4608      	mov	r0, r1
 8000b56:	4611      	mov	r1, r2
 8000b58:	2200      	movs	r2, #0
 8000b5a:	4d05      	ldr	r5, [pc, #20]	@ (8000b70 <_lseek_r+0x20>)
 8000b5c:	602a      	str	r2, [r5, #0]
 8000b5e:	461a      	mov	r2, r3
 8000b60:	f7ff fb93 	bl	800028a <_lseek>
 8000b64:	1c43      	adds	r3, r0, #1
 8000b66:	d102      	bne.n	8000b6e <_lseek_r+0x1e>
 8000b68:	682b      	ldr	r3, [r5, #0]
 8000b6a:	b103      	cbz	r3, 8000b6e <_lseek_r+0x1e>
 8000b6c:	6023      	str	r3, [r4, #0]
 8000b6e:	bd38      	pop	{r3, r4, r5, pc}
 8000b70:	200001c4 	.word	0x200001c4

08000b74 <_read_r>:
 8000b74:	b538      	push	{r3, r4, r5, lr}
 8000b76:	4604      	mov	r4, r0
 8000b78:	4608      	mov	r0, r1
 8000b7a:	4611      	mov	r1, r2
 8000b7c:	2200      	movs	r2, #0
 8000b7e:	4d05      	ldr	r5, [pc, #20]	@ (8000b94 <_read_r+0x20>)
 8000b80:	602a      	str	r2, [r5, #0]
 8000b82:	461a      	mov	r2, r3
 8000b84:	f7ff fb24 	bl	80001d0 <_read>
 8000b88:	1c43      	adds	r3, r0, #1
 8000b8a:	d102      	bne.n	8000b92 <_read_r+0x1e>
 8000b8c:	682b      	ldr	r3, [r5, #0]
 8000b8e:	b103      	cbz	r3, 8000b92 <_read_r+0x1e>
 8000b90:	6023      	str	r3, [r4, #0]
 8000b92:	bd38      	pop	{r3, r4, r5, pc}
 8000b94:	200001c4 	.word	0x200001c4

08000b98 <_sbrk_r>:
 8000b98:	b538      	push	{r3, r4, r5, lr}
 8000b9a:	2300      	movs	r3, #0
 8000b9c:	4d05      	ldr	r5, [pc, #20]	@ (8000bb4 <_sbrk_r+0x1c>)
 8000b9e:	4604      	mov	r4, r0
 8000ba0:	4608      	mov	r0, r1
 8000ba2:	602b      	str	r3, [r5, #0]
 8000ba4:	f7ff fb7e 	bl	80002a4 <_sbrk>
 8000ba8:	1c43      	adds	r3, r0, #1
 8000baa:	d102      	bne.n	8000bb2 <_sbrk_r+0x1a>
 8000bac:	682b      	ldr	r3, [r5, #0]
 8000bae:	b103      	cbz	r3, 8000bb2 <_sbrk_r+0x1a>
 8000bb0:	6023      	str	r3, [r4, #0]
 8000bb2:	bd38      	pop	{r3, r4, r5, pc}
 8000bb4:	200001c4 	.word	0x200001c4

08000bb8 <_write_r>:
 8000bb8:	b538      	push	{r3, r4, r5, lr}
 8000bba:	4604      	mov	r4, r0
 8000bbc:	4608      	mov	r0, r1
 8000bbe:	4611      	mov	r1, r2
 8000bc0:	2200      	movs	r2, #0
 8000bc2:	4d05      	ldr	r5, [pc, #20]	@ (8000bd8 <_write_r+0x20>)
 8000bc4:	602a      	str	r2, [r5, #0]
 8000bc6:	461a      	mov	r2, r3
 8000bc8:	f7ff fb1f 	bl	800020a <_write>
 8000bcc:	1c43      	adds	r3, r0, #1
 8000bce:	d102      	bne.n	8000bd6 <_write_r+0x1e>
 8000bd0:	682b      	ldr	r3, [r5, #0]
 8000bd2:	b103      	cbz	r3, 8000bd6 <_write_r+0x1e>
 8000bd4:	6023      	str	r3, [r4, #0]
 8000bd6:	bd38      	pop	{r3, r4, r5, pc}
 8000bd8:	200001c4 	.word	0x200001c4

08000bdc <_close_r>:
 8000bdc:	b538      	push	{r3, r4, r5, lr}
 8000bde:	2300      	movs	r3, #0
 8000be0:	4d05      	ldr	r5, [pc, #20]	@ (8000bf8 <_close_r+0x1c>)
 8000be2:	4604      	mov	r4, r0
 8000be4:	4608      	mov	r0, r1
 8000be6:	602b      	str	r3, [r5, #0]
 8000be8:	f7ff fb2b 	bl	8000242 <_close>
 8000bec:	1c43      	adds	r3, r0, #1
 8000bee:	d102      	bne.n	8000bf6 <_close_r+0x1a>
 8000bf0:	682b      	ldr	r3, [r5, #0]
 8000bf2:	b103      	cbz	r3, 8000bf6 <_close_r+0x1a>
 8000bf4:	6023      	str	r3, [r4, #0]
 8000bf6:	bd38      	pop	{r3, r4, r5, pc}
 8000bf8:	200001c4 	.word	0x200001c4

08000bfc <_fstat_r>:
 8000bfc:	b538      	push	{r3, r4, r5, lr}
 8000bfe:	2300      	movs	r3, #0
 8000c00:	4d06      	ldr	r5, [pc, #24]	@ (8000c1c <_fstat_r+0x20>)
 8000c02:	4604      	mov	r4, r0
 8000c04:	4608      	mov	r0, r1
 8000c06:	4611      	mov	r1, r2
 8000c08:	602b      	str	r3, [r5, #0]
 8000c0a:	f7ff fb25 	bl	8000258 <_fstat>
 8000c0e:	1c43      	adds	r3, r0, #1
 8000c10:	d102      	bne.n	8000c18 <_fstat_r+0x1c>
 8000c12:	682b      	ldr	r3, [r5, #0]
 8000c14:	b103      	cbz	r3, 8000c18 <_fstat_r+0x1c>
 8000c16:	6023      	str	r3, [r4, #0]
 8000c18:	bd38      	pop	{r3, r4, r5, pc}
 8000c1a:	bf00      	nop
 8000c1c:	200001c4 	.word	0x200001c4

08000c20 <_free_r>:
 8000c20:	b538      	push	{r3, r4, r5, lr}
 8000c22:	4605      	mov	r5, r0
 8000c24:	2900      	cmp	r1, #0
 8000c26:	d040      	beq.n	8000caa <_free_r+0x8a>
 8000c28:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c2c:	1f0c      	subs	r4, r1, #4
 8000c2e:	2b00      	cmp	r3, #0
 8000c30:	bfb8      	it	lt
 8000c32:	18e4      	addlt	r4, r4, r3
 8000c34:	f7ff fe36 	bl	80008a4 <__malloc_lock>
 8000c38:	4a1c      	ldr	r2, [pc, #112]	@ (8000cac <_free_r+0x8c>)
 8000c3a:	6813      	ldr	r3, [r2, #0]
 8000c3c:	b933      	cbnz	r3, 8000c4c <_free_r+0x2c>
 8000c3e:	6063      	str	r3, [r4, #4]
 8000c40:	6014      	str	r4, [r2, #0]
 8000c42:	4628      	mov	r0, r5
 8000c44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c48:	f7ff be32 	b.w	80008b0 <__malloc_unlock>
 8000c4c:	42a3      	cmp	r3, r4
 8000c4e:	d908      	bls.n	8000c62 <_free_r+0x42>
 8000c50:	6820      	ldr	r0, [r4, #0]
 8000c52:	1821      	adds	r1, r4, r0
 8000c54:	428b      	cmp	r3, r1
 8000c56:	bf01      	itttt	eq
 8000c58:	6819      	ldreq	r1, [r3, #0]
 8000c5a:	685b      	ldreq	r3, [r3, #4]
 8000c5c:	1809      	addeq	r1, r1, r0
 8000c5e:	6021      	streq	r1, [r4, #0]
 8000c60:	e7ed      	b.n	8000c3e <_free_r+0x1e>
 8000c62:	461a      	mov	r2, r3
 8000c64:	685b      	ldr	r3, [r3, #4]
 8000c66:	b10b      	cbz	r3, 8000c6c <_free_r+0x4c>
 8000c68:	42a3      	cmp	r3, r4
 8000c6a:	d9fa      	bls.n	8000c62 <_free_r+0x42>
 8000c6c:	6811      	ldr	r1, [r2, #0]
 8000c6e:	1850      	adds	r0, r2, r1
 8000c70:	42a0      	cmp	r0, r4
 8000c72:	d10b      	bne.n	8000c8c <_free_r+0x6c>
 8000c74:	6820      	ldr	r0, [r4, #0]
 8000c76:	4401      	add	r1, r0
 8000c78:	1850      	adds	r0, r2, r1
 8000c7a:	4283      	cmp	r3, r0
 8000c7c:	6011      	str	r1, [r2, #0]
 8000c7e:	d1e0      	bne.n	8000c42 <_free_r+0x22>
 8000c80:	6818      	ldr	r0, [r3, #0]
 8000c82:	685b      	ldr	r3, [r3, #4]
 8000c84:	4408      	add	r0, r1
 8000c86:	6010      	str	r0, [r2, #0]
 8000c88:	6053      	str	r3, [r2, #4]
 8000c8a:	e7da      	b.n	8000c42 <_free_r+0x22>
 8000c8c:	d902      	bls.n	8000c94 <_free_r+0x74>
 8000c8e:	230c      	movs	r3, #12
 8000c90:	602b      	str	r3, [r5, #0]
 8000c92:	e7d6      	b.n	8000c42 <_free_r+0x22>
 8000c94:	6820      	ldr	r0, [r4, #0]
 8000c96:	1821      	adds	r1, r4, r0
 8000c98:	428b      	cmp	r3, r1
 8000c9a:	bf01      	itttt	eq
 8000c9c:	6819      	ldreq	r1, [r3, #0]
 8000c9e:	685b      	ldreq	r3, [r3, #4]
 8000ca0:	1809      	addeq	r1, r1, r0
 8000ca2:	6021      	streq	r1, [r4, #0]
 8000ca4:	6063      	str	r3, [r4, #4]
 8000ca6:	6054      	str	r4, [r2, #4]
 8000ca8:	e7cb      	b.n	8000c42 <_free_r+0x22>
 8000caa:	bd38      	pop	{r3, r4, r5, pc}
 8000cac:	200001c0 	.word	0x200001c0

08000cb0 <_init>:
 8000cb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cb2:	bf00      	nop
 8000cb4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000cb6:	bc08      	pop	{r3}
 8000cb8:	469e      	mov	lr, r3
 8000cba:	4770      	bx	lr

08000cbc <_fini>:
 8000cbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cbe:	bf00      	nop
 8000cc0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000cc2:	bc08      	pop	{r3}
 8000cc4:	469e      	mov	lr, r3
 8000cc6:	4770      	bx	lr
